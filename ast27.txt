mod Expression ('body',)
mod FunctionType ('argtypes', 'returns')
mod Interactive ('body',)
mod Module ('body', 'type_ignores')
mod Suite ('body',)

stmt Assert ('test', 'msg')
stmt Assign ('targets', 'value', 'type_comment')
stmt AugAssign ('target', 'op', 'value')
stmt Break ()
stmt ClassDef ('name', 'bases', 'body', 'decorator_list')
stmt Continue ()
stmt Delete ('targets',)
stmt Exec ('body', 'globals', 'locals')
stmt Expr ('value',)
stmt For ('target', 'iter', 'body', 'orelse', 'type_comment')
stmt FunctionDef ('name', 'args', 'body', 'decorator_list', 'type_comment')
stmt Global ('names',)
stmt If ('test', 'body', 'orelse')
stmt Import ('names',)
stmt ImportFrom ('module', 'names', 'level')
stmt Pass ()
stmt Print ('dest', 'values', 'nl')
stmt Raise ('type', 'inst', 'tback')
stmt Return ('value',)
stmt TryExcept ('body', 'handlers', 'orelse')
stmt TryFinally ('body', 'finalbody')
stmt While ('test', 'body', 'orelse')
stmt With ('context_expr', 'optional_vars', 'body', 'type_comment')

AST alias ('name', 'asname')
AST arguments ('args', 'vararg', 'kwarg', 'defaults', 'type_comments')v
AST comprehension ('target', 'iter', 'ifs')
AST keyword ('arg', 'value')

boolop And ()
boolop Or ()

cmpop Eq ()
cmpop Gt ()
cmpop GtE ()
cmpop In ()
cmpop Is ()
cmpop IsNot ()
cmpop Lt ()
cmpop LtE ()
cmpop NotEq ()
cmpop NotIn ()

excepthandler ExceptHandler ('type', 'name', 'body')

expr Attribute ('value', 'attr', 'ctx')
expr BinOp ('left', 'op', 'right')
expr BoolOp ('op', 'values')
expr Call ('func', 'args', 'keywords', 'starargs', 'kwargs')
expr Compare ('left', 'ops', 'comparators')
expr Dict ('keys', 'values')
expr DictComp ('key', 'value', 'generators')
expr GeneratorExp ('elt', 'generators')
expr IfExp ('test', 'body', 'orelse')
expr Lambda ('args', 'body')
expr List ('elts', 'ctx')
expr ListComp ('elt', 'generators')
expr Name ('id', 'ctx')
expr Num ('n',)
expr Repr ('value',)
expr Set ('elts',)
expr SetComp ('elt', 'generators')
expr Str ('s', 'has_b')
expr Subscript ('value', 'slice', 'ctx')
expr Tuple ('elts', 'ctx')
expr UnaryOp ('op', 'operand')
expr Yield ('value',)

expr_context AugLoad ()
expr_context AugStore ()
expr_context Del ()
expr_context Load ()
expr_context Param ()
expr_context Store ()

operator Add ()
operator BitAnd ()
operator BitOr ()
operator BitXor ()
operator Div ()
operator FloorDiv ()
operator LShift ()
operator Mod ()
operator Mult ()
operator Pow ()
operator RShift ()
operator Sub ()

slice Ellipsis ()
slice ExtSlice ('dims',)
slice Index ('value',)
slice Slice ('lower', 'upper', 'step')

type_ignore TypeIgnore ('lineno',)

unaryop Invert ()
unaryop Not ()
unaryop UAdd ()
unaryop USub ()
